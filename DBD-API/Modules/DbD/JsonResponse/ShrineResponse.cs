// <auto-generated />



namespace DBD_API.Modules.DbD.JsonResponse
{
    using System;
    using System.Globalization;
    using System.Diagnostics;
    using DBD_API.Modules.DbD.JsonResponse.Converters;
    using System.Text.Json.Serialization;
    using System.Text.Json;

    public partial class ShrineResponse
    {
        [JsonPropertyName("items")]
        public Item[] Items { get; set; }

        [JsonPropertyName("startDate")]
        public DateTime StartDate { get; set; }

        [JsonPropertyName("endDate")]
        public DateTime EndDate { get; set; }

        [JsonPropertyName("week")]
        public long Week { get; set; }
    }

    public partial class Item
    {
        public string Name { get; set; }
        
        [JsonPropertyName("id")]
        public string Id { get; set; }

        [JsonPropertyName("bloodpointValue")]
        public long BloodpointValue { get; set; }

        [JsonPropertyName("experienceValue")]
        public long ExperienceValue { get; set; }

        [JsonPropertyName("unique")]
        public bool Unique { get; set; }

        [JsonPropertyName("purchased")]
        public bool Purchased { get; set; }

        [JsonPropertyName("version")]
        public string Version { get; set; }

        [JsonPropertyName("cost")]
        public Cost[] Cost { get; set; }
    }

    public partial class Cost
    {
        [JsonPropertyName("currencyId")]
        public string CurrencyId { get; set; }

        [JsonPropertyName("price")]
        public long Price { get; set; }
    }

    public partial class ShrineConvert
    {
        public static ShrineResponse FromJson(string json) => JsonSerializer.Deserialize<ShrineResponse>(json, ShrineConverter.Settings);
    }

    public static class ShrineConverter
    {
        public static readonly JsonSerializerOptions Settings = new JsonSerializerOptions
        {
            WriteIndented = true,
            Converters = { DateTimeConverter.Singleton }
        };
    }
}
